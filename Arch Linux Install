## Install ARCH Linux with encrypted file-system and UEFI

The official installation guide (https://wiki.archlinux.org/index.php/Installation_Guide) contains a more verbose description.

## Download the Arch ISO

* Image from https://www.archlinux.org/

### Copy to a USB drive
# Rufus for Windows or Etcher in linux are good options.

### Boot from USB drive

If the usb fails to boot, make sure that secure boot is disabled in the BIOS configuration.

### The default keyboard layout in the live session is US. To list all the supported keyboard layout:

ls /usr/share/kbd/keymaps/i386/qwerty/*.map.gz

# And then change the layout to the an appropriate one using loadkeys command. For US alt,int:

loadkeys us-acentos

# More at: https://wiki.archlinux.org/index.php/Linux_console/Keyboard_configuration#Loadkeys

### Check if you have UEFI mode enabled--> More at: https://wiki.archlinux.org/index.php/Unified_Extensible_Firmware_Interface

ls /sys/firmware/efi/efivars

# If this directory exists, you have a UEFI enabled system.

# More at: https://wiki.archlinux.org/index.php/Unified_Extensible_Firmware_Interface

### Partition the disks:
# More info on partitioning formats and schemes: https://wiki.archlinux.org/index.php/Partitioning#Partition_scheme

# List all the disk and partitions on your system, will tell you if is /dev/sda or something else:

fdisk -l

# Create partitions

    cfdisk /dev/sda
		
 # 1 500MB EFI partition # EFI type
 # 2 100% size partiton # (to be encrypted).

### Create EFI partition

    mkfs.vfat -F32 -n EFI /dev/sda1

### Create encrypted partitions
# More info and to try different options: https://wiki.archlinux.org/index.php/Dm-crypt
  
    cryptsetup --use-random luksFormat /dev/sda2
    cryptsetup luksOpen /dev/sda2 luks

This creates a partion for root and a partion /home:

    pvcreate /dev/mapper/luks
    vgcreate volume /dev/mapper/luks
    lvcreate --size 80G volume --name root
    lvcreate -l +100%FREE volume --name home

### Create filesystems on encrypted partitions
  
    mkfs.ext4 -L root /dev/mapper/volume-root
    mkfs.ext4 -L home /dev/mapper/volume-home

## Mount the new system

	mkdir /mnt/boot && mount /dev/sda1 /mnt/boot # /the EFI boot
	mount /dev/mapper/volume-root /mnt # /mnt is the installed system
	mkdir /mnt/home && mount /dev/mapper/volume-home /mnt/home # /mnt/home is the /home for installed system

## Select an appropriate mirror
# Sync the pacman repository:
		
	pacman -Sy

# Now, install reflector(https://wiki.archlinux.org/index.php/Reflector) , to list the fresh and fast mirrors:
		
	yes | pacman -S reflector

# Get the good mirror list with reflector and save it to mirrorlist. US is used.
# More refelector options: https://wiki.archlinux.org/index.php/Reflector

	reflector -c "US" -f 12 -l 10 -n 12 --sort rate --save /etc/pacman.d/mirrorlist  

## Install the system 
# It installs linux-zen(https://wiki.archlinux.org/index.php/Kernel):
# It installs systemd-swap(https://github.com/Nefelim4ag/systemd-swap/blob/master/README.md#about-configuration):

	pacstrap /mnt linux-zen linux-zen-headers linux-firmware base base-devel systemd sudo systemd-swap efibootmgr lvm2 nano nano-syntax-highlighting

## Generate fstab

  genfstab -U /mnt >> /mnt/etc/fstab
	
## Enter the new system

  arch-chroot /mnt
	
#To know what mount points are listed.
	cat /etc/fstab
	
#To know what partitions are actually mounted.
cat /proc/mounts
	
## If any partition is NOT correctly listed:

	rm /etc/fstab
	
# mount the partitions inside the chroot:
# exit chroot
# rund genfstab -U /mnt >> /mnt/etc/fstab again and reenter the chroot.

## Replacing vi with nano:
# To replace vi with nano as the default text editor set the VISUAL and EDITOR environment variables:
# Edit /etc/environment and add the foollowing: 

VISUAL=nano
EDITOR=nano

## Setup systemd-swap:

nano /etc/systemd/swap.conf

# Uncoment all zswap and swapfc, uncoment zram_enable=0

systemctl enable systemd-swap

## Setup system clock and timezone:(https://wiki.archlinux.org/index.php/System_time)
#Set clock:

hwclock --systohc

# To list available zones:

timedatectl list-timezones

# To set your time zone:
# timedatectl set-timezone Zone/SubZone
# Example:

timedatectl set-timezone America/New_York

# To enable NTP:(https://wiki.archlinux.org/index.php/Systemd-timesyncd):

timedatectl set-ntp true

systemctl enable systemd-timedated && systemctl enable systemd-timesyncd

## Set the hostname

echo MYHOSTNAME > /etc/hostname

## Generate locale
# More at: https://wiki.archlinux.org/index.php/Locale
# Uncomment wanted locales in /etc/locale.gen
	
	nano /etc/locale.gen
	locale-gen
	
# To set locale system wide( Do NOT set LC_ALL=C. It overrides all the locale vars and messes up special characters)
# Pay attention to the UTF-8. Capital letters!

    echo LANG=en_US.UTF-8 >> /etc/locale.conf
    echo LC_ALL= >> /etc/locale.conf
		
## Add user(https://wiki.archlinux.org/index.php/Users_and_groups):
# set the password for the root account using the passwd command:

	passwd

# Add a system user:

	useradd -m -g users -G wheel,storage,network,uucp,games,power,optical,scanner,lp,audio,video -s /bin/bash MYUSERNAME && passwd MYUSERNAME

# Allow the system user to use sudo and run commands (temporary) as root:

	EDITOR=nano visudo

# Press CTRL + W and type wheel, then uncomment the following line:

	%wheel ALL=(ALL ALL)

## Configure mkinitcpio with modules needed for the initrd image
# Important: lvm2 must be installed inside the arch-chroot for mkinitcpio to find the lvm2 or mkinitcpio will output Error: Hook 'lvm2' cannot be found
   
	 nano /etc/mkinitcpio.conf

# Add 'ext4' to MODULES
# Edit the /etc/mkinitcpio.conf
# Look for the HOOKS variable and move keyboard to before the filesystems and add encrypt and lvm2 after keyboard. Like:

		HOOKS=(base udev autodetect modconf block keyboard encrypt lvm2 filesystems fsck)

## Regenerate initrd image

    mkinitcpio -p linux-zen

## Setup systembootd

    bootctl --path=/boot install

## Edit /boot/loader/loader.conf

	timeout 0
	default arch
	editor 0

## Create arch.conf:

    nano /boot/loader/entries/arch.conf

## Add the following content to arch.conf

`<UUID>` is the the one of the raw encrypted device (/dev/sda2). It can be found with the `blkid` command

    title Arch Linux
    linux /vmlinuz-linux-zen
    initrd /initramfs-linux-zen.img
    options cryptdevice=UUID=<UUID>:volume root=/dev/mapper/volume-root quiet rw

###Exiting chroot:

exit

### Turn off:

shutdown now

### Installing KDE Plasma desktop and some extras (Optional, skip if another desktop whanted):

pacman -S xorg plasma plasma-wayland-session sddm networkmanager packagekit-qt5 ttf-dejavu phonon-qt5-vlc vlc git firefox && systemctl enable sddm.service && systemctl enable NetworkManager.service
